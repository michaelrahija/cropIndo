unique(data$subDistrictNames)
mdir
mdir
config <- read.csv(paste0(wdir,"/config/hh_to_polygon.csv"), stringsAsFactors = FALSE)
if(sys[5] == "x86_64"){
wdir = "~/Dropbox/CROP/Indonesia/cropIndo" #Mac
dd = "~/Dropbox/CROP/Indonesia/listing_data/"
hhdir = "~/Dropbox/CROP/Indonesia/hh_coordinates"
sdir = "~/Dropbox/CROP/Indonesia/shape_files"
cdir = "~/Dropbox/CROP/Indonesia/config"
} else {
wdir = "C:/Users/rahija/Dropbox/Tanzania_Vet_Services_Project/Live_data_collection/Metadata_reporting/program"
mdir = "C:/Users/rahija/Dropbox/Tanzania_Vet_Services_Project/Live_data_collection/"
}
config <- read.csv(paste0(cdir,"/","hh_to_polygon.csv"), stringsAsFactors = FALSE)
cidr
cdir
config <- read.csv(paste0(cdir,"/","hh_to_poly.csv"), stringsAsFactors = FALSE)
config <- read.csv(paste0(wdir,"/","hh_to_poly.csv"), stringsAsFactors = FALSE)
paste0(wdir,"/","hh_to_poly.csv")
config <- read.csv(paste0(wdir,"/config/","hh_to_poly.csv"), stringsAsFactors = FALSE)
config
config <- select(config,polygon_code,sub_dist_name2_LABEL,census_block)
config
config$temp <- paste0(sub_dist_name2_LABEL,census_block)
config$temp <- paste0(config$sub_dist_name2_LABEL,config$census_block)
colnames(data)
config <- read.csv(paste0(wdir,"/config/","hh_to_poly.csv"), stringsAsFactors = FALSE)
config <- select(config,polygon_code,sub_dist_name2_LABEL,census_block)
config$temp <- paste0(config$sub_dist_name2_LABEL,config$census_block)
data$temp <- paste0(config$sub_dist_name2,data$censusBlockLabels)
config$temp
data$temp
test <- merge(data,config)
head(test)
test <- merge(data,config, all = TRUE)
head(test)
tail(test)
test <- merge(data,config, by = temp, all = TRUE)
test <- merge(data,config, by = "temp", all = TRUE)
head(test)
tail(test$polygoncode)
unqique(test$polygoncode)
config
colnames(data)
colnames(config)
colnames(test)
unique(test$polygon_code)
library(dplyr)
library(reshape)
library(xlsx)
library(ggplot2)
library(ggmap)
#Set working directory
sys <- Sys.info()
if(sys[5] == "x86_64"){
wdir = "~/Dropbox/CROP/Indonesia/cropIndo" #Mac
dd = "~/Dropbox/CROP/Indonesia/listing_data/"
hhdir = "~/Dropbox/CROP/Indonesia/hh_coordinates"
sdir = "~/Dropbox/CROP/Indonesia/shape_files"
} else {
wdir = "C:/Users/rahija/Dropbox/Tanzania_Vet_Services_Project/Live_data_collection/Metadata_reporting/program"
mdir = "C:/Users/rahija/Dropbox/Tanzania_Vet_Services_Project/Live_data_collection/"
}
#set working directory
setwd(wdir)
#ID actions files
files = list.files(dd, pattern = "actions")
data.list <- list()
#Accumulate actions data in a list
for (i in 1:length(files)){
data.temp <- read.delim(paste0(dd,"/",files[i]), header = TRUE,
stringsAsFactors = FALSE)
data.list[[i]] <- data.temp
}
#Merge list into one data frame
data <- do.call("rbind", data.list)
#keep only unique rows
data <- unique(data)
source("R/interview_table.R")
x <- interview_table(data)
x <- x[,1:(length(x)-1)]
length(x[,1])
tab <- x %>%
group_by(Interviewer) %>%
summarize(interviews = n())
# source("R/summaryTable.R")
# tab <- summaryTable(x)
# colnames(tab) <- c("Team","Enumerators","Interviews")
ggplot(tab, aes(x = Interviewer, y = interviews))+
geom_bar(stat = "identity") +
labs(x = "Enumerators", y = "# of interviews completed",
main = "Interviewer Summary")
source("R/mergeListing.R")
data <- mergeListing(dd = "~/Dropbox/CROP/Indonesia/")
##-- apply factor labels
source("R/labelFactors.R")
data <- labelFactors(df = data,
vars = c("sub_dist_name2","census_block"))
data$subDistrictNames <- as.character(data$subDistrictNames)
tab <- data %>%
group_by(subDistrictNames, censusBlockLabels) %>%
summarize(length(physicalBuildingId))
colnames(tab) <- c("Sub Districts","Census Blocks","Number Ag HH")
knitr::kable(tab)
#create temp variable to merge in polygon codes
config <- read.csv(paste0(wdir,"/config/","hh_to_poly.csv"), stringsAsFactors = FALSE)
config <- select(config,polygon_code,sub_dist_name2_LABEL,census_block)
config$temp <- paste0(config$sub_dist_name2_LABEL,config$census_block)
data$temp <- paste0(config$sub_dist_name2,data$censusBlockLabels)
test <- merge(data,config, by = "temp", all = TRUE)
head(test)
tab <- test %>% group_by(polygon_code) %>% summarize(n())
tab
as.data.frame(tab)
data <- merge(data,config, by = "temp", all = TRUE)
if(data$gps1_Accuracy > data$gps2_Accuracy){
data$gps_Accuracy <- data$gps2_Accuracy
} else {
data$gps_Accuracy <- data$gps1_Accuracy
}
colnames(data)
#-take most accurate gps
if(data$gps1_Accuracy > data$gps2_Accuracy){
data$lat <- data$gps2_Latitude
data$lon <- data$gps2_Longitude
} else {
data$lat <- data$gps1_Latitude
data$lon <- data$gps1_Longitude
}
geo <- select(data,physicalBuildingId,lat,lon,polygon_code)
geo
geo
filter(data,physicalBuildingId == "06b418bfbecb48399157b2682c5f006a")
config
#create temp variable to merge in polygon codes
config <- read.csv(paste0(wdir,"/config/","hh_to_poly.csv"), stringsAsFactors = FALSE)
config <- select(config,polygon_code,sub_dist_name2_LABEL,census_block)
config$temp <- paste0(config$sub_dist_name2_LABEL,config$census_block)
data$temp <- paste0(config$sub_dist_name2,data$censusBlockLabels)
data <- merge(data,config, by = "temp", all = TRUE)
#-take most accurate gps
if(data$gps1_Accuracy > data$gps2_Accuracy){
data$lat <- data$gps2_Latitude
data$lon <- data$gps2_Longitude
} else {
data$lat <- data$gps1_Latitude
data$lon <- data$gps1_Longitude
}
geo <- select(data,physicalBuildingId,lat,lon,polygon_code)
colnames(data)
config
source("R/mergeListing.R")
data <- mergeListing(dd = "~/Dropbox/CROP/Indonesia/")
##-- apply factor labels
source("R/labelFactors.R")
data <- labelFactors(df = data,
vars = c("sub_dist_name2","census_block"))
data$subDistrictNames <- as.character(data$subDistrictNames)
tab <- data %>%
group_by(subDistrictNames, censusBlockLabels) %>%
summarize(length(physicalBuildingId))
colnames(tab) <- c("Sub Districts","Census Blocks","Number Ag HH")
knitr::kable(tab)
#create temp variable to merge in polygon codes
config <- read.csv(paste0(wdir,"/config/","hh_to_poly.csv"), stringsAsFactors = FALSE)
config <- select(config,polygon_code,sub_dist_name2_LABEL,census_block)
config$temp <- paste0(config$sub_dist_name2_LABEL,config$census_block)
data$temp <- paste0(config$sub_dist_name2,data$censusBlockLabels)
data <- merge(data,config, by = "temp", all = TRUE)
#-take most accurate gps
if(data$gps1_Accuracy > data$gps2_Accuracy){
data$lat <- data$gps2_Latitude
data$lon <- data$gps2_Longitude
} else {
data$lat <- data$gps1_Latitude
data$lon <- data$gps1_Longitude
}
geo <- select(data,physicalBuildingId,lat,lon,polygon_code)
geo
filter(data,physicalBuildingId == "41b178fb3b4243ce9bd28dbc9ab7cbf5")
config
source("R/mergeListing.R")
data <- mergeListing(dd = "~/Dropbox/CROP/Indonesia/")
##-- apply factor labels
source("R/labelFactors.R")
data <- labelFactors(df = data,
vars = c("sub_dist_name2","census_block"))
data$subDistrictNames <- as.character(data$subDistrictNames)
#create temp variable to merge in polygon codes
config <- read.csv(paste0(wdir,"/config/","hh_to_poly.csv"), stringsAsFactors = FALSE)
config <- select(config,polygon_code,sub_dist_name2_LABEL,census_block)
config$temp <- paste0(config$sub_dist_name2_LABEL,config$census_block)
data$temp <- paste0(data$sub_dist_name2,data$censusBlockLabels)
data <- merge(data,config, by = "temp", all = TRUE)
#-take most accurate gps
if(data$gps1_Accuracy > data$gps2_Accuracy){
data$lat <- data$gps2_Latitude
data$lon <- data$gps2_Longitude
} else {
data$lat <- data$gps1_Latitude
data$lon <- data$gps1_Longitude
}
geo <- select(data,physicalBuildingId,lat,lon,polygon_code)
geo
head(data)
source("R/mergeListing.R")
data <- mergeListing(dd = "~/Dropbox/CROP/Indonesia/")
##-- apply factor labels
source("R/labelFactors.R")
data <- labelFactors(df = data,
vars = c("sub_dist_name2","census_block"))
data$subDistrictNames <- as.character(data$subDistrictNames)
tab <- data %>%
group_by(subDistrictNames, censusBlockLabels) %>%
summarize(length(physicalBuildingId))
colnames(tab) <- c("Sub Districts","Census Blocks","Number Ag HH")
knitr::kable(tab)
head(data)
data$temp <- paste0(data$subDistrictNames,data$censusBlockLabels)
data$temp
unique(data$temp)
tab
config
config <- read.csv(paste0(wdir,"/config/","hh_to_poly.csv"), stringsAsFactors = FALSE)
config <- select(config,polygon_code,sub_dist_name2_LABEL,census_block)
config$temp <- paste0(config$sub_dist_name2_LABEL,config$census_block)
data$temp <- paste0(data$subDistrictNames,data$censusBlockLabels)
data <- merge(data,config, by = "temp", all = TRUE)
#-take most accurate gps
if(data$gps1_Accuracy > data$gps2_Accuracy){
data$lat <- data$gps2_Latitude
data$lon <- data$gps2_Longitude
} else {
data$lat <- data$gps1_Latitude
data$lon <- data$gps1_Longitude
}
geo <- select(data,physicalBuildingId,lat,lon,polygon_code)
geo
data$polygon_code[is.na(data$lat)] <- NA
#-take most accurate gps
if(data$gps1_Accuracy > data$gps2_Accuracy){
data$lat <- data$gps2_Latitude
data$lon <- data$gps2_Longitude
} else {
data$lat <- data$gps1_Latitude
data$lon <- data$gps1_Longitude
}
geo <- select(data,physicalBuildingId,lat,lon,polygon_code)
geo
geo <- unique(geo)
geo
ids <- unique(geo$polygon_code)
ids
ids
ids <- ids[!is.na(ids)]
ids
m <- list()
i=1
poly <- read.csv(paste0(sdir,"/",ids[i]))
paste0(sdir,"/",ids[i])
poly <- read.csv(paste0(sdir,"/",ids[i]),".csv")
poly <- read.csv(paste0(sdir,"/",ids[i],".csv"))
poly
colnames(poly) <- c("lon","lat")
geo
colnames(geo)
hh <- filter(geo,polygon_code == ids[i])
hh
hh <- select(lat,lon)
hh <- select(geo,lat,lon)
hh
hh$farmer_name <- rep(NA,nrow(hh))
hh
colnames(hh) <- c("lat","lon", "farmer_name")
test2 <- get_map(location = c(lon = mean(hh$lon), lat = mean(hh$lat)), zoom = 15)
test3 <- ggmap(test2)
test2 <- get_map(location = c(lon = mean(hh$lon), lat = mean(hh$lat)), zoom = 15)
hh <- hh[!is.na(hh[,1]),]
test2 <- get_map(location = c(lon = mean(hh$lon), lat = mean(hh$lat)), zoom = 15)
test3 <- ggmap(test2)
#add households and polygon to map
m <- test3 + geom_polygon(aes(x=lon, y=lat), fill='grey', size=.6,color='red', data=poly, alpha=0)
m <- m + geom_point(data = hh, aes(x = lon, y = lat, fill = "red", alpha = 0.8), size = 1, shape = 21, color = "red")
m <- m + guides(fill=FALSE, alpha=FALSE, size=FALSE)
m <- m + labs(x = "longitude", y = "latitude", main = "Map of Interviews")
m <- m + ggtitle(paste0(gsub(".csv","",ids[i])))
print(m)
#Get map, will need center. Could take the average lat, and long of the hh         coordinates to automate!
test2 <- get_map(location = c(lon = mean(poly$lon), lat = mean(poly$lat)), zoom = 15)
test3 <- ggmap(test2)
#add households and polygon to map
m <- test3 + geom_polygon(aes(x=lon, y=lat), fill='grey', size=.6,color='red', data=poly, alpha=0)
m <- m + geom_point(data = hh, aes(x = lon, y = lat, fill = "red", alpha = 0.8), size = 1, shape = 21, color = "red")
m <- m + guides(fill=FALSE, alpha=FALSE, size=FALSE)
m <- m + labs(x = "longitude", y = "latitude", main = "Map of Interviews")
m <- m + ggtitle(paste0(gsub(".csv","",ids[i])))
print(m)
ids[i]
hh <- filter(geo,polygon_code == ids[i])
hh
hh <- filter(geo,polygon_code == ids[i])
hh <- select(geo,lat,lon)
hh$farmer_name <- rep(NA,nrow(hh))
colnames(hh) <- c("lat","lon", "farmer_name")
hh <- hh[!is.na(hh[,1]),]
#Get map, will need center. Could take the average lat, and long of the hh         coordinates to automate!
test2 <- get_map(location = c(lon = mean(poly$lon), lat = mean(poly$lat)), zoom = 15)
test3 <- ggmap(test2)
#add households and polygon to map
m <- test3 + geom_polygon(aes(x=lon, y=lat), fill='grey', size=.6,color='red', data=poly, alpha=0)
m <- m + geom_point(data = hh, aes(x = lon, y = lat, fill = "red", alpha = 0.8), size = 1, shape = 21, color = "red")
m <- m + guides(fill=FALSE, alpha=FALSE, size=FALSE)
m <- m + labs(x = "longitude", y = "latitude", main = "Map of Interviews")
m <- m + ggtitle(paste0(gsub(".csv","",ids[i])))
print(m)
config <- read.csv(paste0(wdir,"/config/","hh_to_poly.csv"), stringsAsFactors = FALSE)
config <- select(config,polygon_code,sub_dist_name2_LABEL,census_block)
config$temp <- paste0(config$sub_dist_name2_LABEL,config$census_block)
data$temp <- paste0(data$subDistrictNames,data$censusBlockLabels)
data <- merge(data,config, by = "temp", all = TRUE)
data$polygon_code[is.na(data$lat)] <- NA
#-take most accurate gps
if(data$gps1_Accuracy > data$gps2_Accuracy){
data$lat <- data$gps2_Latitude
data$lon <- data$gps2_Longitude
} else {
data$lat <- data$gps1_Latitude
data$lon <- data$gps1_Longitude
}
geo <- select(data,physicalBuildingId,lat,lon,polygon_code)
ids <- unique(geo$polygon_code)
ids <- ids[!is.na(ids)]
ids
config <- read.csv(paste0(wdir,"/config/","hh_to_poly.csv"), stringsAsFactors = FALSE)
config <- select(config,polygon_code,sub_dist_name2_LABEL,census_block)
config$temp <- paste0(config$sub_dist_name2_LABEL,config$census_block)
data$temp <- paste0(data$subDistrictNames,data$censusBlockLabels)
data <- merge(data,config, by = "temp", all = TRUE)
data$polygon_code[is.na(data$lat)] <- NA
#-take most accurate gps
if(data$gps1_Accuracy > data$gps2_Accuracy){
data$lat <- data$gps2_Latitude
data$lon <- data$gps2_Longitude
} else {
data$lat <- data$gps1_Latitude
data$lon <- data$gps1_Longitude
}
geo <- select(data,physicalBuildingId,lat,lon,polygon_code)
ids <- unique(geo$polygon_code)
ids
geo
config <- read.csv(paste0(wdir,"/config/","hh_to_poly.csv"), stringsAsFactors = FALSE)
config <- select(config,polygon_code,sub_dist_name2_LABEL,census_block)
config$temp <- paste0(config$sub_dist_name2_LABEL,config$census_block)
data$temp <- paste0(data$subDistrictNames,data$censusBlockLabels)
source("R/mergeListing.R")
data <- mergeListing(dd = "~/Dropbox/CROP/Indonesia/")
##-- apply factor labels
source("R/labelFactors.R")
data <- labelFactors(df = data,
vars = c("sub_dist_name2","census_block"))
data$subDistrictNames <- as.character(data$subDistrictNames)
tab <- data %>%
group_by(subDistrictNames, censusBlockLabels) %>%
summarize(length(physicalBuildingId))
colnames(tab) <- c("Sub Districts","Census Blocks","Number Ag HH")
knitr::kable(tab)
#create temp variable to merge in polygon codes
config <- read.csv(paste0(wdir,"/config/","hh_to_poly.csv"), stringsAsFactors = FALSE)
config <- select(config,polygon_code,sub_dist_name2_LABEL,census_block)
config$temp <- paste0(config$sub_dist_name2_LABEL,config$census_block)
data$temp <- paste0(data$subDistrictNames,data$censusBlockLabels)
data <- merge(data,config, by = "temp", all = TRUE)
head(data)
if(data$gps1_Accuracy > data$gps2_Accuracy){
data$lat <- data$gps2_Latitude
data$lon <- data$gps2_Longitude
} else {
data$lat <- data$gps1_Latitude
data$lon <- data$gps1_Longitude
}
geo <- select(data,physicalBuildingId,lat,lon,polygon_code)
geo
colnames(geo)
geo$polygon_code[is.na(data$physicalBuildingId)] <- NA
geo
geo <- filter(geo,!is.na(geo$physicalBuildingId))
geo
source("R/mergeListing.R")
data <- mergeListing(dd = "~/Dropbox/CROP/Indonesia/")
##-- apply factor labels
source("R/labelFactors.R")
data <- labelFactors(df = data,
vars = c("sub_dist_name2","census_block"))
data$subDistrictNames <- as.character(data$subDistrictNames)
tab <- data %>%
group_by(subDistrictNames, censusBlockLabels) %>%
summarize(length(physicalBuildingId))
colnames(tab) <- c("Sub Districts","Census Blocks","Number Ag HH")
knitr::kable(tab)
#create temp variable to merge in polygon codes
config <- read.csv(paste0(wdir,"/config/","hh_to_poly.csv"), stringsAsFactors = FALSE)
config <- select(config,polygon_code,sub_dist_name2_LABEL,census_block)
config$temp <- paste0(config$sub_dist_name2_LABEL,config$census_block)
data$temp <- paste0(data$subDistrictNames,data$censusBlockLabels)
data <- merge(data,config, by = "temp", all = TRUE)
#-take most accurate gps
if(data$gps1_Accuracy > data$gps2_Accuracy){
data$lat <- data$gps2_Latitude
data$lon <- data$gps2_Longitude
} else {
data$lat <- data$gps1_Latitude
data$lon <- data$gps1_Longitude
}
geo <- select(data,physicalBuildingId,lat,lon,polygon_code)
geo <- filter(geo,!is.na(geo$physicalBuildingId))
geo
geo <- filter(geo,!is.na(geo$lat))
geo
ids <- unique(geo$polygon_code)
ids <- ids[!is.na(ids)]
ids
source("R/mergeListing.R")
data <- mergeListing(dd = "~/Dropbox/CROP/Indonesia/")
##-- apply factor labels
source("R/labelFactors.R")
data <- labelFactors(df = data,
vars = c("sub_dist_name2","census_block"))
data$subDistrictNames <- as.character(data$subDistrictNames)
tab <- data %>%
group_by(subDistrictNames, censusBlockLabels) %>%
summarize(length(physicalBuildingId))
colnames(tab) <- c("Sub Districts","Census Blocks","Number Ag HH")
knitr::kable(tab)
#create temp variable to merge in polygon codes
config <- read.csv(paste0(wdir,"/config/","hh_to_poly.csv"), stringsAsFactors = FALSE)
config <- select(config,polygon_code,sub_dist_name2_LABEL,census_block)
config$temp <- paste0(config$sub_dist_name2_LABEL,config$census_block)
data$temp <- paste0(data$subDistrictNames,data$censusBlockLabels)
data <- merge(data,config, by = "temp", all = TRUE)
#-take most accurate gps
if(data$gps1_Accuracy > data$gps2_Accuracy){
data$lat <- data$gps2_Latitude
data$lon <- data$gps2_Longitude
} else {
data$lat <- data$gps1_Latitude
data$lon <- data$gps1_Longitude
}
geo <- select(data,physicalBuildingId,lat,lon,polygon_code, temp)
geo
cbind(unique(geo$polygon_code),unique(geo$temp))
ref <- data.frame(cbind(unique(geo$polygon_code),unique(geo$temp))
ref <- data.frame(polygon_code = unique(geo$polygon_code),label = unique(geo$temp))
ref <- as.data.frame(polygon_code = unique(geo$polygon_code),label = unique(geo$temp))
ref <- data.frame(polygon_code = unique(geo$polygon_code),label = unique(geo$temp))
ref
ids <- unique(geo$polygon_code)
ids <- ids[!is.na(ids)]
ids
config <- read.csv(paste0(wdir,"/config/","hh_to_poly.csv"), stringsAsFactors = FALSE)
config <- select(config,polygon_code,sub_dist_name2_LABEL,census_block)
config$temp <- paste0(config$sub_dist_name2_LABEL,config$census_block)
data$temp <- paste0(data$subDistrictNames,data$censusBlockLabels)
data <- merge(data,config, by = "temp", all = TRUE)
#-take most accurate gps
if(data$gps1_Accuracy > data$gps2_Accuracy){
data$lat <- data$gps2_Latitude
data$lon <- data$gps2_Longitude
} else {
data$lat <- data$gps1_Latitude
data$lon <- data$gps1_Longitude
}
geo <- select(data,physicalBuildingId,lat,lon,polygon_code, temp)
geo <- filter(geo,!is.na(geo$lat))
ref <- data.frame(polygon_code = unique(geo$polygon_code),label = unique(geo$temp))
ids <- unique(geo$polygon_code)
ids <- ids[!is.na(ids)]
source("R/mergeListing.R")
data <- mergeListing(dd = "~/Dropbox/CROP/Indonesia/")
##-- apply factor labels
source("R/labelFactors.R")
data <- labelFactors(df = data,
vars = c("sub_dist_name2","census_block"))
data$subDistrictNames <- as.character(data$subDistrictNames)
tab <- data %>%
group_by(subDistrictNames, censusBlockLabels) %>%
summarize(length(physicalBuildingId))
colnames(tab) <- c("Sub Districts","Census Blocks","Number Ag HH")
knitr::kable(tab)
#create temp variable to merge in polygon codes
config <- read.csv(paste0(wdir,"/config/","hh_to_poly.csv"), stringsAsFactors = FALSE)
config <- select(config,polygon_code,sub_dist_name2_LABEL,census_block)
config$temp <- paste0(config$sub_dist_name2_LABEL,config$census_block)
data$temp <- paste0(data$subDistrictNames,data$censusBlockLabels)
data <- merge(data,config, by = "temp", all = TRUE)
#-take most accurate gps
if(data$gps1_Accuracy > data$gps2_Accuracy){
data$lat <- data$gps2_Latitude
data$lon <- data$gps2_Longitude
} else {
data$lat <- data$gps1_Latitude
data$lon <- data$gps1_Longitude
}
geo <- select(data,physicalBuildingId,lat,lon,polygon_code, temp)
geo <- filter(geo,!is.na(geo$lat))
ref <- data.frame(polygon_code = unique(geo$polygon_code),label = unique(geo$temp))
ref
ids <- unique(ref$polygon_code)
ids
ids <- ids[!is.na(ids)]
labels <- ref$label
