geom_smooth(method=lm, se=FALSE, formula=y~x-1)
ggplot(gps, aes(x = area_inquiry, y = gpsAvg)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, color = "red") +
annotate("text", label = "Slope = 1", y = 4000, x = 4000,
color = "red") +
ylim(0,5000) +
xlim(0,5000) +
geom_smooth(method=lm, se=FALSE, formula=y~x-1)
ggplot(gps, aes(x = area_inquiry, y = gpsAvg)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, color = "red") +
annotate("text", label = "Slope = 1", y = 4500, x = 4000,
color = "red") +
ylim(0,5000) +
xlim(0,5000) +
geom_smooth(method=lm, se=FALSE, formula=y~x-1)
ggplot(gps, aes(x = area_inquiry, y = gpsAvg)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, color = "red") +
annotate("text", label = "Slope = 1", y = 4500, x = 4000,
color = "red") +
ylim(0,5000) +
xlim(0,5000) +
geom_smooth(method=lm, formula=y~x-1)
ggplot(gps, aes(x = area_inquiry, y = gpsAvg)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, color = "red") +
annotate("text", label = "Slope = 1", y = 4500, x = 4000,
color = "red", size= 5) +
ylim(0,5000) +
xlim(0,5000) +
geom_smooth(method=lm, formula=y~x-1)
?lm
lm(gpsAvg ~ area_inquiry - 1)
lm(gpsAvg ~ area_inquiry - 1, data = gps)
model <- lm(gpsAvg ~ area_inquiry - 1, data = gps)
summary(model)
model <- lm(gpsAvg ~ area_inquiry - 1, data = gps)
summary(model)
summary(model)[1]
summary(model)[2]
model$coefficients
model
str(model)
ggplot(gps, aes(x = area_inquiry, y = gpsAvg)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, color = "red") +
annotate("text", label = "Slope = 1", y = 4500, x = 4000,
color = "red", size= 5) +
ylim(0,5000) +
xlim(0,5000) +
geom_smooth(method=lm, formula=y~x-1) +
annotate("text", label = paste0("Beta = ",model$coefficients), y = 4500, x = 4000,color = "red", size= 5)
ggplot(gps, aes(x = area_inquiry, y = gpsAvg)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, color = "red") +
annotate("text", label = "Slope = 1", y = 4500, x = 4000,
color = "red", size= 5) +
ylim(0,5000) +
xlim(0,5000) +
geom_smooth(method=lm, formula=y~x-1) +
annotate("text", label = paste0("Beta = ",model$coefficients), y = 2500, x = 4000,color = "blue", size= 5)
summary(model)
model$terms
model$coefficients
format(round(model$coefficients,2))
ggplot(gps, aes(x = area_inquiry, y = gpsAvg)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, color = "red") +
annotate("text", label = "Slope = 1", y = 4500, x = 4000,
color = "red", size= 5) +
ylim(0,5000) +
xlim(0,5000) +
geom_smooth(method=lm, formula=y~x-1) +
annotate("text", label = paste0("Coeff = ",format(round(model$coefficients,2)), y = 2500, x = 4000,color = "blue", size= 5)
)
ggplot(gps, aes(x = area_inquiry, y = gpsAvg)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, color = "red") +
annotate("text", label = "Slope = 1", y = 4500, x = 4000,
color = "red", size= 5) +
ylim(0,5000) +
xlim(0,5000) +
geom_smooth(method=lm, formula=y~x-1) +
annotate("text", label = paste0("Coeff = ",format(round(model$coefficients,2))),
y = 2500, x = 4000,color = "blue", size= 5)
model$rsquared
model$r.squared
summary(model)$r.squared
ggplot(gps, aes(x = area_inquiry, y = gpsAvg)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, color = "red") +
annotate("text", label = "Slope = 1", y = 4500, x = 4000,
color = "red", size= 5) +
ylim(0,5000) +
xlim(0,5000) +
geom_smooth(method=lm, formula=y~x-1) +
annotate("text", label = paste0("Coeff = ",format(round(model$coefficients,2)), " ,",
"R-squared = ",format(round(summary(model)$r.squared,2)) ),
y = 2500, x = 4000,color = "blue", size= 5)
ggplot(gps, aes(x = area_inquiry, y = gpsAvg)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, color = "red") +
annotate("text", label = "Slope = 1", y = 4500, x = 4000,
color = "red", size= 3) +
ylim(0,5000) +
xlim(0,5000) +
geom_smooth(method=lm, formula=y~x-1) +
annotate("text", label = paste0("Coeff = ",format(round(model$coefficients,2)), " ,","\n",
"R-squared = ",format(round(summary(model)$r.squared,2)) ),
y = 2500, x = 4000,color = "blue", size= 3)
#create maps
#create maps and figures for analysis
#-- import data and packages
library(DT)
library(dplyr)
library(ggplot2)
library(RColorBrewer)
library(maps)
library(countrycode)
library(scales)
library(igraph)
library(gisfao)
library(sp)
sys <- Sys.info()
if(sys[5] == "x86_64"){
dir = "~/Dropbox/agSTATS" #Mac
data.dir = "~/Dropbox/agSTATS/data/"
} else if (sys[5] == "Michael"){
dir = "C:/Users/Michael/Dropbox/agSTATS"#HOME PC
data.dir = "C:/Users/Michael/Dropbox/agSTATS/data/"
} else if (sys[6]=="Rahija") {
dir = "C:/Users/rahija/Dropbox/agSTATS" #FAO PC
data.dir = "C:/Users/rahija/Dropbox/agSTATS/data/"
} else {
stop("Implement location for current user!")
}
setwd(dir)
data <- read.csv(paste0(data.dir,"agstats_final_for narrative_v2.csv"),
stringsAsFactors = FALSE)
# data <- read.csv(paste0(data.dir,"agstats_final_for narrative_V1.csv"),
#                  stringsAsFactors = FALSE)
source("R/cleanFigures.R")
data <- cleanFigures(data)
#--------CREATE DF FOR EXPENDITURES BY COUNTRY AND MERGE CENTROIDS
country <- filter(data, assCountry == 1)
#Get expenditure data
test.c <- colnames(country) %in% NA
country <- country[!test.c]
data.d <- select(country, country, budget, donor)
data.d <- filter(data.d, !is.na(budget))
x <- strsplit(data.d$country,",")
data.d$denom <- sapply(x,length)
options(scipen = 999)
data.d$totl <- data.d$budget/data.d$denom
#ADD LETTERS TO REMOVE DUPLICATES! ##
test <- duplicated(data.d$totl)
n <- 1:length(data.d$totl[test])
sam <- sample(letters[1:26], length(n), FALSE)
data.d$totl[test] <- paste0(data.d$totl[test], sam)
if(sum(duplicated(data.d$totl)) > 1 ) print("STOP NAMES DUPLICATED!")
####################################################
names(x) <- data.d$totl
x1 = lapply(names(x), function(name){
data.frame(amount = name,
country = x[[name]])
})
master <- do.call("rbind", x1)
master$country <- as.character(master$country)
##Remove letter used to create unique values
master$amount <- gsub(pattern = "[a-z]+$","",master$amount)
master$amount <- as.numeric(as.character(master$amount))
master$country[master$country == "Cameroun"] <- "Cameroon"
master$country <- countrycode(master$country, origin = "country.name",
destination = "country.name", warn = TRUE)
master <- master %>%
group_by(country) %>%
dplyr::summarize(amount = sum(amount))
#Get data frame w/ polygons and centroids
centroid <- as.data.frame(fao_world_centroids)
centroid <- select(centroid,ADM0_NAME,x,y)
colnames(centroid) <- c("country","clong","clat")
centroid$country <- as.character(centroid$country)
temp <- data.frame(country = c("Cabo Verde","Comoros", "Kiribati", "Tonga", "Maldives"),
clong = c(-23.627155,43.335468,-157.409388,-175.161552,73.5361),
clat = c(15.088946,-11.664959,1.881687,-21.172421,1.97724))
centroid <- rbind(temp,centroid)
centroid$country <- countrycode(centroid$country, origin = "country.name",
destination = "country.name", warn = TRUE)
master <- merge(master,centroid, by = "country", all = TRUE)
master <- filter(master, !is.na(amount))
master <- filter(master, !(country == "India" & clat > 23))
if(sum(duplicated(master$country)) > 0) print("duplicated country!")
fao_world2 = fortify(fao_world)
countryName = fao_world@data
countryName$id = rownames(countryName)
fao_world2 = merge(fao_world2, countryName, by = "id")
#filter data
master.t <- filter(master,!is.na(amount))
fao_world2 <- filter(fao_world2, ADM0_NAME != "Antarctica")
fao_world2 <- arrange(fao_world2,order)
master.t$country  <- gsub("^ +","", master.t$country)
##---CREATE DF FOR DONORS BY COUNTRY AND MERGE
donors <- select(data.d,country,donor)
x <- strsplit(donors$country,",")
names <- donors$donor
test <- data.frame(names = as.character(names), rep = sapply(x,length))
y <- c()
#create vector of donors
for(i in 1:nrow(test)){
temp <- rep(as.character(test[i,1]), times = test[i,2])
y <- append(y,temp)
}
#bind donors w/ unlisted countries
master.c <- data.frame(donors = y, country = unlist(x))
master.c$country <- as.character(master.c$country)
master.c$country[master.c$country == "Cameroun"] <- "Cameroon"
master.c$country <- countrycode(master.c$country, origin = "country.name",
destination = "country.name", warn = TRUE)
# master.c1 <- master.c %>%
#               group_by(country) %>%
#               summarize(donors = n())
master.c <- master.c %>%
group_by(country) %>%
summarize(donors = length(unique(donors)))
master <- merge(master, master.c, all = TRUE)
## PLOT
breaks = c(1000000,5000000,10000000,15000000)
head(master)
temp <- select(country, donors)
temp <- select(master, country, donors)
temp
write.csv(master, file = "donorsxLeslie.csv")
write.csv(temp, file = "donorsxLeslie.csv")
gps$gpsAvg <- (gps$area_gps1 + gps$area_gps2)/2
gps$diff <- abs(gps$area_inquiry - gps$gpsAvg)
gps$perDiff <- abs(gps$diff/((gps$area_inquiry + gps$gpsAvg)/2))
gps <- filter(gps, gpsAvg < 10000)
model <- lm(gpsAvg ~ area_inquiry - 1, data = gps)
ggplot(gps, aes(x = area_inquiry, y = gpsAvg)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, color = "red") +
annotate("text", label = "Slope = 1", y = 4500, x = 4000,
color = "red", size= 3) +
ylim(0,5000) +
xlim(0,5000) +
geom_smooth(method=lm, formula=y~x-1) +
annotate("text", label = paste0("Coeff = ",format(round(model$coefficients,2)), " ,","\n",
"R-squared = ",format(round(summary(model)$r.squared,2)) ),
y = 2500, x = 4000,color = "blue", size= 3)
#---Import data
library(dplyr)
library(ggplot2)
library(tidyr)
library(plyr)
#Set working directory
sys <- Sys.info()
if(sys[5] == "x86_64"){
wdir = "~/Dropbox/CROP/Indonesia/cropIndo" #Mac
dd = "~/Dropbox/CROP/Indonesia/area_data"
} else {
wdir = "C:/Users/rahija/Dropbox/CROP/Indonesia/cropIndo"
dd = "C:/Users/rahija/Dropbox/CROP/Indonesia/area_data"
}
#set working directory
setwd(wdir)
dd.files <- list.files(dd, pattern = ".tab")
intActions <- grepl(dd.files, pattern = "interview_actions")
dd.files <- dd.files[!intActions]
###----Take first file ""Cat 3_QUES 3_Crop area by_inquiry_GPS_Indonesia_Iswadi.tab"
id <- grepl(dd.files, pattern = "GPS_Indonesia")
df <- read.table(paste0(dd,"/", dd.files[id]),
sep="\t",
header = TRUE,
stringsAsFactors = FALSE)
##---Take parcel roster
id <- grepl(dd.files, pattern = "parcel_roster")
df.pr <- read.table(paste0(dd,"/", dd.files[id]),
sep="\t",
header = TRUE,
stringsAsFactors = FALSE)
##GPS Analysis
gps <- select(df.pr, area_inquiry, area_gps1, area_gps2)
gps$parcelno <- 1:nrow(gps)
gps <- filter(gps, !is.na(area_gps1))
gps <- select(gps, parcelno, area_inquiry, area_gps1, area_gps2)
#gps$avg_gps <- (gps$area_gps1 + gps$area_gps2)/2
gps.long <- gps %>%
gather(measure, size, area_inquiry, area_gps1, area_gps2)
gps.temp <- filter(gps.long, measure %in% c("area_inquiry", "avg_gps"))
cdat <- ddply(gps.long, "measure",summarise, size.mean = mean(size))
ggplot(gps.long, aes(x = size, fill = measure)) +
geom_density(alpha = .3) +
ggtitle(paste0("Number of parcels = ", ... =   length(unique(gps.long$parcelno)))) +
geom_vline(data = cdat, aes(xintercept = size.mean, color = measure),
size = 1)     +
annotate("text", label = "Averages of distributions", y = .0011, x = 4000,
color = "red")
ggplot(gps.long, aes(factor(measure), size, fill = factor(measure))) +
geom_violin()
gps$gpsAvg <- (gps$area_gps1 + gps$area_gps2)/2
gps$diff <- abs(gps$area_inquiry - gps$gpsAvg)
gps$perDiff <- abs(gps$diff/((gps$area_inquiry + gps$gpsAvg)/2))
gps <- filter(gps, gpsAvg < 10000)
model <- lm(gpsAvg ~ area_inquiry - 1, data = gps)
ggplot(gps, aes(x = area_inquiry, y = gpsAvg)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, color = "red") +
annotate("text", label = "Slope = 1", y = 4500, x = 4000,
color = "red", size= 3) +
ylim(0,5000) +
xlim(0,5000) +
geom_smooth(method=lm, formula=y~x-1) +
annotate("text", label = paste0("Coeff = ",format(round(model$coefficients,2)), " ,","\n",
"R-squared = ",format(round(summary(model)$r.squared,2)) ),
y = 2500, x = 4000,color = "blue", size= 3)
ggplot(gps, aes(x = area_inquiry, y = gpsAvg)) +
geom_point() +
#   geom_abline(intercept = 0, slope = 1, color = "red") +
#   annotate("text", label = "Slope = 1", y = 4500, x = 4000,
#            color = "red", size= 3) +
ylim(0,5000) +
xlim(0,5000) +
geom_smooth(method=lm, formula=y~x) +
annotate("text", label = paste0("Coeff = ",format(round(model$coefficients,2)), " ,","\n",
"R-squared = ",format(round(summary(model)$r.squared,2)) ),
y = 2500, x = 4000,color = "blue", size= 3)
model <- lm(perDiff~gpsAvg, data = gps)
ggplot(gps, aes(x = perDiff, y = gpsAvg)) +
geom_point() +
#   geom_abline(intercept = 0, slope = 1, color = "red") +
#   annotate("text", label = "Slope = 1", y = 4500, x = 4000,
#            color = "red", size= 3) +
ylim(0,5000) +
xlim(0,5000) +
geom_smooth(method=lm, formula=y~x) +
annotate("text", label = paste0("Coeff = ",format(round(model$coefficients,2)), " ,","\n",
"R-squared = ",format(round(summary(model)$r.squared,2)) ),
y = 2500, x = 4000,color = "blue", size= 3)
model
gps
colnames(gps)
model <- lm(perDiff~gpsAvg, data = gps)
ggplot(gps, aes(x = gpsAvg, y = perDiff)) +
geom_point() +
#   geom_abline(intercept = 0, slope = 1, color = "red") +
#   annotate("text", label = "Slope = 1", y = 4500, x = 4000,
#            color = "red", size= 3) +
ylim(0,5000) +
xlim(0,5000) +
geom_smooth(method=lm, formula=y~x) +
annotate("text", label = paste0("Coeff = ",format(round(model$coefficients,2)), " ,","\n",
"R-squared = ",format(round(summary(model)$r.squared,2)) ),
y = 2500, x = 4000,color = "blue", size= 3)
model
summary(model)
ggplot(gps, aes(x= perDiff, y = area_inquiry)) +
geom_point()
geom_smooth(method = lm)
ggplot(gps, aes(x= perDiff, y = area_inquiry)) +
geom_point() +
geom_smooth(method = lm)
ggplot(gps, aes(x= area_inquiry, y = perDiff)) +
geom_point() +
geom_smooth(method = lm)
ggplot(gps, aes(x= area_inquiry, y = perDiff)) +
geom_point() +
geom_smooth(method = lm) +
annotate("text", label = paste0("Coeff = ",format(round(model$coefficients,2)), " ,","\n",
"R-squared = ",format(round(summary(model)$r.squared,2)) ),
y = 2500, x = 4000,color = "blue", size= 3)
paste0("Coeff = ",format(round(model$coefficients,2))
)
summary(model)
model$coefficients
model$coefficients[2]
ggplot(gps, aes(x= area_inquiry, y = perDiff)) +
geom_point() +
geom_smooth(method = lm)
ggplot(gps, aes(x= area_inquiry, y = perDiff)) +
geom_point() +
geom_smooth(method = lm) +
ylab("Percentage Difference")
ggplot(gps, aes(x= area_inquiry, y = perDiff)) +
geom_point() +
geom_smooth(method = lm) +
ylab("Percentage Difference") +
xlab("Area given by farmer inquiry")
ggplot(gps, aes(x = area_inquiry, y = gpsAvg)) +
geom_point() +
#   geom_abline(intercept = 0, slope = 1, color = "red") +
#   annotate("text", label = "Slope = 1", y = 4500, x = 4000,
#            color = "red", size= 3) +
ylim(0,5000) +
xlim(0,5000) +
geom_smooth(method=lm, formula=y~x) +
annotate("text", label = paste0("Coeff = ",format(round(model$coefficients,2)), " ,","\n",
"R-squared = ",format(round(summary(model)$r.squared,2)) ),
y = 2500, x = 4000,color = "blue", size= 3)
#---Import data
library(dplyr)
library(ggplot2)
library(tidyr)
library(plyr)
#Set working directory
sys <- Sys.info()
if(sys[5] == "x86_64"){
wdir = "~/Dropbox/CROP/Indonesia/cropIndo" #Mac
dd = "~/Dropbox/CROP/Indonesia/area_data"
} else {
wdir = "C:/Users/rahija/Dropbox/CROP/Indonesia/cropIndo"
dd = "C:/Users/rahija/Dropbox/CROP/Indonesia/area_data"
}
#set working directory
setwd(wdir)
dd.files <- list.files(dd, pattern = ".tab")
intActions <- grepl(dd.files, pattern = "interview_actions")
dd.files <- dd.files[!intActions]
###----Take first file ""Cat 3_QUES 3_Crop area by_inquiry_GPS_Indonesia_Iswadi.tab"
id <- grepl(dd.files, pattern = "GPS_Indonesia")
df <- read.table(paste0(dd,"/", dd.files[id]),
sep="\t",
header = TRUE,
stringsAsFactors = FALSE)
##---Take parcel roster
id <- grepl(dd.files, pattern = "parcel_roster")
df.pr <- read.table(paste0(dd,"/", dd.files[id]),
sep="\t",
header = TRUE,
stringsAsFactors = FALSE)
##GPS Analysis
gps <- select(df.pr, area_inquiry, area_gps1, area_gps2)
gps$parcelno <- 1:nrow(gps)
gps <- filter(gps, !is.na(area_gps1))
gps <- select(gps, parcelno, area_inquiry, area_gps1, area_gps2)
#gps$avg_gps <- (gps$area_gps1 + gps$area_gps2)/2
gps.long <- gps %>%
gather(measure, size, area_inquiry, area_gps1, area_gps2)
gps.temp <- filter(gps.long, measure %in% c("area_inquiry", "avg_gps"))
cdat <- ddply(gps.long, "measure",summarise, size.mean = mean(size))
ggplot(gps.long, aes(x = size, fill = measure)) +
geom_density(alpha = .3) +
ggtitle(paste0("Number of parcels = ", ... =   length(unique(gps.long$parcelno)))) +
geom_vline(data = cdat, aes(xintercept = size.mean, color = measure),
size = 1)     +
annotate("text", label = "Averages of distributions", y = .0011, x = 4000,
color = "red")
ggplot(gps.long, aes(factor(measure), size, fill = factor(measure))) +
geom_violin()
gps$gpsAvg <- (gps$area_gps1 + gps$area_gps2)/2
gps$diff <- abs(gps$area_inquiry - gps$gpsAvg)
gps$perDiff <- abs(gps$diff/((gps$area_inquiry + gps$gpsAvg)/2))
gps <- filter(gps, gpsAvg < 10000)
model <- lm(gpsAvg ~ area_inquiry, data = gps)
ggplot(gps, aes(x = area_inquiry, y = gpsAvg)) +
geom_point() +
#   geom_abline(intercept = 0, slope = 1, color = "red") +
#   annotate("text", label = "Slope = 1", y = 4500, x = 4000,
#            color = "red", size= 3) +
ylim(0,5000) +
xlim(0,5000) +
geom_smooth(method=lm, formula=y~x) +
annotate("text", label = paste0("Coeff = ",format(round(model$coefficients,2)), " ,","\n",
"R-squared = ",format(round(summary(model)$r.squared,2)) ),
y = 2500, x = 4000,color = "blue", size= 3)
ggplot(gps, aes(x = area_inquiry, y = gpsAvg)) +
geom_point()
ggplot(gps, aes(x = area_inquiry, y = gpsAvg)) +
geom_point() +
#   geom_abline(intercept = 0, slope = 1, color = "red") +
#   annotate("text", label = "Slope = 1", y = 4500, x = 4000,
#            color = "red", size= 3) +
ylim(0,5000) +
xlim(0,5000) +
geom_smooth(method=lm, formula=y~x)
paste0("Coeff = ",format(round(model$coefficients,2)), " ,","\n",
"R-squared = ",format(round(summary(model)$r.squared,2)) )
annotate("text", label = paste0("Coeff = ",format(round(model$coefficients[[2]],2)), " ,","\n",
"R-squared = ",format(round(summary(model)$r.squared,2)) )
paste0("Coeff = ",format(round(model$coefficients[[2]],2)), " ,","\n",
"R-squared = ",format(round(summary(model)$r.squared,2)) )
format(round(model$coefficients[[2]],2))
paste0("Coeff = ",format(round(model$coefficients[[2]],2)), " ,","\n",
"R-squared = ",format(round(summary(model)$r.squared,2)) )
ggplot(gps, aes(x = area_inquiry, y = gpsAvg)) +
geom_point() +
#   geom_abline(intercept = 0, slope = 1, color = "red") +
#   annotate("text", label = "Slope = 1", y = 4500, x = 4000,
#            color = "red", size= 3) +
ylim(0,5000) +
xlim(0,5000) +
geom_smooth(method=lm, formula=y~x) +
annotate("text", label = paste0("Coeff = ",format(round(model$coefficients[[2]],2)), " ,","\n",
"R-squared = ",format(round(summary(model)$r.squared,2)) ),
y = 2500, x = 4000,color = "blue", size= 3)
colnames(gps)
sd(gps$area_gps1)
sd(gps$area_gps2)
sd(gps$area_inquiry)
temp <- filter(gps, area_inquiry < 2500)
sd(gps$area_gps1)
sd(gps$area_gps2)
sd(gps$area_inquiry)
temp <- filter(gps, area_inquiry < 1000)
sd(temp$area_inquiry)
sd(temp$area_gps1)
sd(temp$area_gps2)
temp <- filter(gps, area_inquiry < 2500)
sd(temp$area_gps2)
sd(temp$area_gps1)
sd(temp$area_inquiry)
